
lane :ios_test do
  puts("Testing Fastlane from iOS")
end

lane :ios_flutter do |options|
  build_number = options[:build_number]
  build_name = options[:build_name]
  skip_clean = options[:skip_clean]

  unless skip_clean
    sh("flutter", "clean")
    sh("flutter", "packages", "get")
  end

  cocoapods(use_bundle_exec: false, podfile: "ios")
 
  sh("flutter", "build", "ios", "--release", "--no-codesign", "--no-tree-shake-icons", "--build-name=#{build_name}", "--build-number=#{build_number}")
end

lane :ios_build_and_upload do |options|
  build_number = options[:build_number]
  build_name = options[:build_name]
  skip_clean = options[:skip_clean]
  type = options[:type]
  changelog = options[:changelog]

  if build_number || build_name
    ios_flutter(build_number: build_number, build_name: build_name, skip_clean:)
  end

  sync_code_signing(type: "appstore")
  
  build_app(
    workspace: "./ios/Runner.xcworkspace",
    scheme: "Runner",
  )

  if type == "beta"
    ios_beta_upload(options)
  elsif type == "release"
    ios_beta_upload(options)
  end
  
end

lane :ios_beta_upload do |options|
  changelog = options[:changelog]

  upload_to_testflight(
    changelog: changelog
  )
end

lane :ios_release_upload do |options|
  changelog = options[:changelog]

  upload_to_app_store(
    release_notes: changelog
  )
end

